esphome:
  name: motor-control
  friendly_name: motor control
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

esp32:
  board: az-delivery-devkit-v4
  framework:
    type: esp-idf

# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:  
  password: !secret api_password

# OTA is required for Over-the-Air updating
ota:
  - platform: esphome

wifi:
  # Set up a wifi access point using the device name above
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "motor_control_hotspot"
    password: !secret wifi_ap_password

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:
    
web_server:
  port: 80 
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "Sensor IP address"
    ssid:
      name: "Sensor SSID"
  - platform: version
    name: "Sensor ESPHome Version"

# sn74hc595 is a shift register that allows you to control multiple motor outputs
sn74hc595:
  - id: sn74hc595_hub
    data_pin: GPIO12
    clock_pin: GPIO17
    latch_pin: GPIO19
    oe_pin: GPIO14

switch:
  - platform: gpio
    id: motor4_forward
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 5 (M4A)
      number: 5
      inverted: false
  - platform: gpio
    id: motor4_reverse
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 7 (M4B)
      number: 7
      inverted: false
  - platform: gpio
    id: motor4_enable
    pin: GPIO27

cover:
  - platform: time_based
    id: door_cover
    device_class: garage

    open_action:
      - switch.turn_on: motor4_forward
      - switch.turn_off: motor4_reverse
      - switch.turn_on: motor4_enable
    open_duration: 31sec

    close_action:
      - switch.turn_off: motor4_forward
      - switch.turn_on: motor4_reverse
      - switch.turn_on: motor4_enable
    close_duration: 30sec

    stop_action:
      - switch.turn_off: motor4_enable
      - switch.turn_off: motor4_forward
      - switch.turn_off: motor4_reverse

button:
  - platform: template
    id: door_cover_open
    name: "Door Cover Open"
    on_press: 
      - cover.open: door_cover
  - platform: template
    id: door_cover_close
    name: "Door Cover Close"
    on_press: 
      - cover.close: door_cover

binary_sensor:
  - platform: gpio
    pin: GPIO39
    name: "Door Cover Open Button"
    id: open_button
    device_class: opening
  - platform: gpio
    pin: GPIO36
    name: "Door Cover Close Button"
    id: close_button
    device_class: opening

## Obstacle protection: If the door is closing and the obstacle switch is pressed, then
# - the door should stop immediately
# - the door should reopen
# - a log message should be output
# - the door should close again after one minute
  - platform: gpio
    pin: GPIO34
  name: "Door Obstacle Protection"
    id: door_obstacle_protection
    on_press:
      then:
        - lambda: |-
            if ((id(door_cover).current_operation == CoverOperation::COVER_OPERATION_CLOSING) &&
               (id(door_cover).position > 0.1)) {
              // If the cover is closing, stop it and reopen
              auto call = id(door_cover).make_call();
              call.set_command_stop();
              call.perform();
              call.set_command_open();
              call.perform();
            }
        - logger.log: "Obstacle detected! Door stopped and reopened."
        - delay: 60s
        - cover.close: door_cover
        

time:
  - platform: sntp
    id: sntp_time
  timezone: Europe/Berlin
    servers:
     - 0.pool.ntp.org
     - 1.pool.ntp.org
     - 2.pool.ntp.org
    on_time:
      - seconds: 0
        minutes: 0
        hours: 8  
        then:
          - cover.open: door_cover

      - seconds: 0
        minutes: 0
        hours: 20
        then:
        - cover.close: door_cover

sun:
  latitude: 48.09009° 
  longitude: 11.96109°
  on_sunrise:
    - elevation: 5°
      then:
  - logger.log: Good morning! 
  on_sunset:
    - elevation: 5°
      then:
  - logger.log: Good evening! 
    - elevation: 0°
      then:
  - logger.log: Good night!