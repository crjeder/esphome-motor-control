esphome:
  name: motor-control
  friendly_name: motor control
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

esp32:
  board: esp32dev
  framework:
    type: esp-idf

# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:

# OTA is required for Over-the-Air updating
ota:
  - platform: esphome

wifi:
  # Set up a wifi access point using the device name above
  ap:

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:
    
web_server:
  port: 80 
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "Sensor IP address"
    ssid:
      name: "Sensor SSID"
  - platform: version
    name: "Sensor ESPHome Version"

output:
  - platform: esp8266_pwm
    id: motor_forward_pin
    pin: GPIO5
  - platform: esp8266_pwm
    id: motor_reverse_pin
    pin: GPIO4

fan:
  - platform: hbridge
    id: my_fan
    name: "Living Room Fan"
    pin_a: motor_forward_pin
    pin_b: motor_reverse_pin
    enable_pin: motor_enable
    decay_mode: slow

cover:
  - platform: time_based
    name: "door cover"

    open_action:
      - switch.turn_on: open_cover_switch
    open_duration: 2.1min

    close_action:
      - switch.turn_on: close_cover_switch
    close_duration: 2min

    stop_action:
      - switch.turn_off: open_cover_switch
      - switch.turn_off: close_cover_switch